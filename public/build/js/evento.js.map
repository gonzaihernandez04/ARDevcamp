{"version":3,"sources":["evento.js"],"names":["document","querySelector","busqueda","categoria_id","dia","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","value","target","name","horaPrevia","classList","remove","async","Object","values","includes","url","console","log","respuesta","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","horasNoDisponibles","Array","from","hora","removeEventListener","seleccionarHora","listadoHorasArray","filter","dataset","horaId","horario","addEventListener","obtenerHorasDisponibles","json","buscarEventos"],"mappings":"AAAA,MAGE,GAFgBA,SAASC,cAAc,UAE1B,CACX,IAAIC,EAAW,CACbC,aAAc,GACdC,IAAK,IAGP,MAAMC,EAAOL,SAASM,iBAAiB,gBACjCC,EAAiBP,SAASC,cAAc,mBACxCO,EAAkBR,SAASC,cAAc,oBAM/C,SAASQ,EAAgBC,GAGvBF,EAAgBG,MAAQ,GACxBJ,EAAeI,MAAQ,GAGvBT,EAASQ,EAAEE,OAAOC,MAAQH,EAAEE,OAAOD,MAEnC,MAAMG,EAAad,SAASC,cAAc,8BAGvCa,GACCA,EAAWC,UAAUC,OAAO,6BAMlCC,iBAEI,GAAGC,OAAOC,OAAOjB,GAAUkB,SAAS,IAChC,OAEJ,MAAMC,EAAM,qCAAqCnB,EAASC,uBAAuBD,EAASE,MAG1F,GAFAkB,QAAQC,IAAIF,GAETA,EAAI,CACH,MAAMG,QAAkBC,MAAMJ,IAOtC,UAAiCK,QAACA,IAI7B,MAAMC,EAAe3B,SAASM,iBAAiB,aAIhD,GAHAqB,EAAaC,QAAQC,GAAMA,EAAGd,UAAUe,IAAI,sBAGzCJ,EAAQ,CAEP,MAAMK,EAAeL,EAAQM,IAAKC,GAAUA,EAAOC,SAG7CC,EAAqBnC,SAASM,iBAAiB,sBACrD8B,MAAMC,KAAKF,GAAoBH,IAAIM,IACnBA,EAAKC,oBAAoB,QAASC,KAMlD,MAAMC,EAAoBL,MAAMC,KAAKV,GAEXc,EAAkBC,OAAOb,IAAME,EAAaX,SAASS,EAAGc,QAAQC,SAExEhB,QAAQiB,IACtBA,EAAQ9B,UAAUC,OAAO,uBAIJhB,SAASM,iBAAiB,qCAElCsB,QAAQU,IACrBA,EAAKQ,iBAAiB,QAAQN,MArClCO,OADsBvB,EAAUwB,SAdtCC,GAyDF,SAAST,EAAgB9B,GAKrB,MAAMI,EAAad,SAASC,cAAc,8BACvCa,GACCA,EAAWC,UAAUC,OAAO,6BAEhCN,EAAEE,OAAOG,UAAUe,IAAI,6BACvBtB,EAAgBG,MAAQD,EAAEE,OAAO+B,QAAQC,OAKzCrC,EAAeI,MAAQX,SAASC,cAAc,wBAAwBU,MA7FxDX,SAASC,cAAc,yBAE/B6C,iBAAiB,SAAUrC,GACrCJ,EAAKuB,QAASxB,GAAQA,EAAI0C,iBAAiB,SAAUrC,MAfzD","file":"evento.js","sourcesContent":["(() => {\r\n  const ulHoras = document.querySelector(\".horas\");\r\n\r\n  if (ulHoras) {\r\n    let busqueda = {\r\n      categoria_id: \"\",\r\n      dia: \"\",\r\n    };\r\n\r\n    const dias = document.querySelectorAll('[name=\"dia\"]');\r\n    const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n    const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n    const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n\r\n    categoria.addEventListener(\"change\", terminoBusqueda);\r\n    dias.forEach((dia) => dia.addEventListener(\"change\", terminoBusqueda));\r\n\r\n    function terminoBusqueda(e) {\r\n\r\n            // Reiniciar los campos ocultos: selector de horas y de dia, esto permite que no permanezca el valor anterior.\r\n      inputHiddenHora.value = '';\r\n      inputHiddenDia.value = '';\r\n\r\n      // Lleno el dia o la categoria en el objeto segun el seleccionado\r\n      busqueda[e.target.name] = e.target.value;\r\n\r\n      const horaPrevia = document.querySelector('.horas__hora--seleccionado');\r\n\r\n\r\n      if(horaPrevia){\r\n          horaPrevia.classList.remove('horas__hora--seleccionado');\r\n      }\r\n\r\n      buscarEventos();\r\n    }\r\n\r\n    async function buscarEventos(){\r\n\r\n        if(Object.values(busqueda).includes(\"\")){\r\n            return;\r\n        }\r\n        const url = `/api/eventos-horario?categoria_id=${busqueda.categoria_id}&dia_id=${busqueda.dia}`\r\n        console.log(url);\r\n        \r\n        if(url){\r\n            const respuesta = await fetch(url);\r\n            \r\n            const eventos = await respuesta.json();\r\n            obtenerHorasDisponibles(eventos);\r\n            \r\n        }\r\n    }\r\n    function obtenerHorasDisponibles({eventos}){\r\n\r\n        // Reiniciar las horas\r\n        // Obtengo todas las horas y recorro otro listado de horas, el cual devolvera las horas que estan tomadas.\r\n         const listadoHoras = document.querySelectorAll(\"#horas li\");\r\n        listadoHoras.forEach(li => li.classList.add('horas__hora--none'));\r\n\r\n    \r\n        if(eventos){\r\n            // Comprobar eventos ya tomados y quitar variable de deshabilitado.\r\n            const horasTomadas = eventos.map( evento => evento.hora_id);\r\n\r\n            // Eliminamos el evento de las horas no disponibles\r\n            const horasNoDisponibles = document.querySelectorAll('.horas__hora--none');\r\n            Array.from(horasNoDisponibles).map(hora => {\r\n                            hora.removeEventListener('click', seleccionarHora);\r\n            })  \r\n            \r\n       \r\n\r\n            // Convierto Node LIST en ARRAY\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const horariosNoTomados = listadoHorasArray.filter(li=> !horasTomadas.includes(li.dataset.horaId));\r\n\r\n            horariosNoTomados.forEach(horario=>{\r\n                horario.classList.remove('horas__hora--none');\r\n            })\r\n            \r\n            // Permite deshabilitar el evento de click para el LI que tiene la clase de .horas__hora--none\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--none)');\r\n\r\n            horasDisponibles.forEach(hora=>{\r\n                hora.addEventListener('click',seleccionarHora);\r\n            });\r\n        }\r\n       \r\n    }\r\n    function seleccionarHora(e) {\r\n\r\n\r\n        // Deshabilita la hora previa si hay un nuevo click\r\n\r\n        const horaPrevia = document.querySelector('.horas__hora--seleccionado');\r\n        if(horaPrevia){\r\n            horaPrevia.classList.remove('horas__hora--seleccionado');\r\n        }\r\n        e.target.classList.add('horas__hora--seleccionado');\r\n        inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n\r\n        // Llenar el value del campo oculto de dia\r\n\r\n        inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n\r\n       \r\n    }\r\n \r\n  }\r\n})();\r\n"]}